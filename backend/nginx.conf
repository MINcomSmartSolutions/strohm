# server {
#     listen 443 ssl;
#     server_name domain.com;
#
#     ssl_certificate /path/to/certificate.crt;
#     ssl_certificate_key /path/to/private.key;
#
#     # Rate limiting
#     limit_req_zone $binary_remote_addr zone=one:10m rate=20r/s;
#
#     location / {
#         limit_req zone=one burst=40 nodelay;
#
#         proxy_pass http://127.0.0.1:3000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # WebSocket support
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#     }
# }


# backend
server {
    listen 443 ssl;
    server_name ladeabrechnung.domain.com;

    ssl_certificate /path/to/certificate.crt;
    ssl_certificate_key /path/to/private.key;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=two:10m rate=10r/s;

    # Backend
    location / {
        limit_req zone=two burst=40 nodelay;

        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Odoo
server {
    listen 443 ssl;
    server_name portal.domain.com;

    ssl_certificate /path/to/certificate.crt;
    ssl_certificate_key /path/to/private.key;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=two:10m rate=10r/s;


    location / {

        proxy_pass http://127.0.0.1:8069;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support for Odoo long polling
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # deny all /portal/internal requests
    # no need to expose odoo internal API since odoo and backend are already in the same network
    # see https://nginx.org/en/docs/http/ngx_http_core_module.html#location for naming
    location ^~ /internal/ {
        deny all;
        return 403;
    }
}